#![allow(
    non_camel_case_types,
    dead_code,
    non_upper_case_globals,
    non_snake_case,
    clashing_extern_declarations
)]

/* automatically generated by rust-bindgen 0.71.1 */

pub const IMSTB_TEXTEDIT_UNDOSTATECOUNT: u32 = 99;
pub const IMSTB_TEXTEDIT_UNDOCHARCOUNT: u32 = 999;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct StbUndoRecord {
    pub where_: ::std::os::raw::c_int,
    pub insert_length: ::std::os::raw::c_int,
    pub delete_length: ::std::os::raw::c_int,
    pub char_storage: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of StbUndoRecord"][::std::mem::size_of::<StbUndoRecord>() - 16usize];
    ["Alignment of StbUndoRecord"][::std::mem::align_of::<StbUndoRecord>() - 4usize];
    ["Offset of field: StbUndoRecord::where_"]
        [::std::mem::offset_of!(StbUndoRecord, where_) - 0usize];
    ["Offset of field: StbUndoRecord::insert_length"]
        [::std::mem::offset_of!(StbUndoRecord, insert_length) - 4usize];
    ["Offset of field: StbUndoRecord::delete_length"]
        [::std::mem::offset_of!(StbUndoRecord, delete_length) - 8usize];
    ["Offset of field: StbUndoRecord::char_storage"]
        [::std::mem::offset_of!(StbUndoRecord, char_storage) - 12usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct StbUndoState {
    pub undo_rec: [StbUndoRecord; 99usize],
    pub undo_char: [::std::os::raw::c_int; 999usize],
    pub undo_point: ::std::os::raw::c_short,
    pub redo_point: ::std::os::raw::c_short,
    pub undo_char_point: ::std::os::raw::c_int,
    pub redo_char_point: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of StbUndoState"][::std::mem::size_of::<StbUndoState>() - 5592usize];
    ["Alignment of StbUndoState"][::std::mem::align_of::<StbUndoState>() - 4usize];
    ["Offset of field: StbUndoState::undo_rec"]
        [::std::mem::offset_of!(StbUndoState, undo_rec) - 0usize];
    ["Offset of field: StbUndoState::undo_char"]
        [::std::mem::offset_of!(StbUndoState, undo_char) - 1584usize];
    ["Offset of field: StbUndoState::undo_point"]
        [::std::mem::offset_of!(StbUndoState, undo_point) - 5580usize];
    ["Offset of field: StbUndoState::redo_point"]
        [::std::mem::offset_of!(StbUndoState, redo_point) - 5582usize];
    ["Offset of field: StbUndoState::undo_char_point"]
        [::std::mem::offset_of!(StbUndoState, undo_char_point) - 5584usize];
    ["Offset of field: StbUndoState::redo_char_point"]
        [::std::mem::offset_of!(StbUndoState, redo_char_point) - 5588usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct STB_TexteditState {
    pub cursor: ::std::os::raw::c_int,
    pub select_start: ::std::os::raw::c_int,
    pub select_end: ::std::os::raw::c_int,
    pub insert_mode: ::std::os::raw::c_uchar,
    pub row_count_per_page: ::std::os::raw::c_int,
    pub cursor_at_end_of_line: ::std::os::raw::c_uchar,
    pub initialized: ::std::os::raw::c_uchar,
    pub has_preferred_x: ::std::os::raw::c_uchar,
    pub single_line: ::std::os::raw::c_uchar,
    pub padding1: ::std::os::raw::c_uchar,
    pub padding2: ::std::os::raw::c_uchar,
    pub padding3: ::std::os::raw::c_uchar,
    pub preferred_x: f32,
    pub undostate: StbUndoState,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of STB_TexteditState"][::std::mem::size_of::<STB_TexteditState>() - 5624usize];
    ["Alignment of STB_TexteditState"][::std::mem::align_of::<STB_TexteditState>() - 4usize];
    ["Offset of field: STB_TexteditState::cursor"]
        [::std::mem::offset_of!(STB_TexteditState, cursor) - 0usize];
    ["Offset of field: STB_TexteditState::select_start"]
        [::std::mem::offset_of!(STB_TexteditState, select_start) - 4usize];
    ["Offset of field: STB_TexteditState::select_end"]
        [::std::mem::offset_of!(STB_TexteditState, select_end) - 8usize];
    ["Offset of field: STB_TexteditState::insert_mode"]
        [::std::mem::offset_of!(STB_TexteditState, insert_mode) - 12usize];
    ["Offset of field: STB_TexteditState::row_count_per_page"]
        [::std::mem::offset_of!(STB_TexteditState, row_count_per_page) - 16usize];
    ["Offset of field: STB_TexteditState::cursor_at_end_of_line"]
        [::std::mem::offset_of!(STB_TexteditState, cursor_at_end_of_line) - 20usize];
    ["Offset of field: STB_TexteditState::initialized"]
        [::std::mem::offset_of!(STB_TexteditState, initialized) - 21usize];
    ["Offset of field: STB_TexteditState::has_preferred_x"]
        [::std::mem::offset_of!(STB_TexteditState, has_preferred_x) - 22usize];
    ["Offset of field: STB_TexteditState::single_line"]
        [::std::mem::offset_of!(STB_TexteditState, single_line) - 23usize];
    ["Offset of field: STB_TexteditState::padding1"]
        [::std::mem::offset_of!(STB_TexteditState, padding1) - 24usize];
    ["Offset of field: STB_TexteditState::padding2"]
        [::std::mem::offset_of!(STB_TexteditState, padding2) - 25usize];
    ["Offset of field: STB_TexteditState::padding3"]
        [::std::mem::offset_of!(STB_TexteditState, padding3) - 26usize];
    ["Offset of field: STB_TexteditState::preferred_x"]
        [::std::mem::offset_of!(STB_TexteditState, preferred_x) - 28usize];
    ["Offset of field: STB_TexteditState::undostate"]
        [::std::mem::offset_of!(STB_TexteditState, undostate) - 32usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct StbTexteditRow {
    pub x0: f32,
    pub x1: f32,
    pub baseline_y_delta: f32,
    pub ymin: f32,
    pub ymax: f32,
    pub num_chars: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of StbTexteditRow"][::std::mem::size_of::<StbTexteditRow>() - 24usize];
    ["Alignment of StbTexteditRow"][::std::mem::align_of::<StbTexteditRow>() - 4usize];
    ["Offset of field: StbTexteditRow::x0"][::std::mem::offset_of!(StbTexteditRow, x0) - 0usize];
    ["Offset of field: StbTexteditRow::x1"][::std::mem::offset_of!(StbTexteditRow, x1) - 4usize];
    ["Offset of field: StbTexteditRow::baseline_y_delta"]
        [::std::mem::offset_of!(StbTexteditRow, baseline_y_delta) - 8usize];
    ["Offset of field: StbTexteditRow::ymin"]
        [::std::mem::offset_of!(StbTexteditRow, ymin) - 12usize];
    ["Offset of field: StbTexteditRow::ymax"]
        [::std::mem::offset_of!(StbTexteditRow, ymax) - 16usize];
    ["Offset of field: StbTexteditRow::num_chars"]
        [::std::mem::offset_of!(StbTexteditRow, num_chars) - 20usize];
};
